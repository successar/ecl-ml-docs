<?xml version='1.0' encoding='UTF-8'?>
<Meta>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl"/>
 <Query sourcePath="/media/sarthak/Data/ecl-ml/./ML/FromField.ecl"/>
 <Source name="ML.Tests.Explanatory.KNN_KDTree" sourcePath="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" target="knn_kdtree.ecl.xml">
  <Import body="0" end="7" fullname="ML" inherit_type="local" line="1" name="ML" ref="ml" start="7" target="../../pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Import body="0" end="18" fullname="ML.Tests.Explanatory" inherit_type="local" line="2" name="TE" ref="ml.tests.explanatory" start="18" target="pkg.toc.xml">
   <Type>attribute</Type>
  </Import>
  <Definition body="54" end="58" fullname="ml.tests.explanatory.depth" inherit_type="local" line="4" name="Depth" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="47">
   <Signature>Depth</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="72" end="76" fullname="ml.tests.explanatory.mediandepth" inherit_type="local" line="5" name="MedianDepth" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="59">
   <Signature>MedianDepth</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="90" end="148" fullname="ml.tests.explanatory.indep_data" inherit_type="local" line="7" name="indep_data" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="78">
   <Signature>indep_data</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="161" end="218" fullname="ml.tests.explanatory.indep_test" inherit_type="local" line="8" name="indep_test" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="149">
   <Signature>indep_test</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="229" end="270" fullname="ml.tests.explanatory.dep_data" inherit_type="local" line="9" name="dep_data" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="219">
   <Signature>dep_data</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="281" end="321" fullname="ml.tests.explanatory.dep_test" inherit_type="local" line="10" name="dep_test" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="271">
   <Signature>dep_test</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="466" end="500" fullname="ml.tests.explanatory.depdata" inherit_type="local" line="18" name="depData" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="456">
   <Signature>depData</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="511" end="546" fullname="ml.tests.explanatory.deptest" inherit_type="local" line="19" name="depTest" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="501">
   <Signature>depTest</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="555" end="578" fullname="ML.Lazy.KNN_KDTree" inherit_type="local" line="22" name="iknn" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="549" target="../../lazy.ecl.xml">
   <Type>module</Type>
   <Definition body="729" end="1160" exported="1" fullname="ml.lazy.knn.majorityvote" inherit_type="inherited" line="14" name="MajorityVote" source="/media/sarthak/Data/ecl-ml/./ML/Lazy.ecl" start="620" target="../../lazy.ecl.xml">
    <Type>function</Type>
    <Signature>MajorityVote(DATASET(ML.NearestNeighborsSearch.NN) NNeighbors ,DATASET(Types.DiscreteField) depData)</Signature><Params>
     <Param name="NNeighbors"/>
     <Param name="depData"/>
    </Params>
   </Definition>
   <Definition body="1425" end="1538" exported="1" fullname="ml.lazy.knn.testc" inherit_type="override" line="21" name="TestC" source="/media/sarthak/Data/ecl-ml/./ML/Lazy.ecl" start="1333" target="../../lazy.ecl.xml">
    <Type>module</Type>
    <Params>
     <Param name="indepData"/>
     <Param name="depData"/>
    </Params>
    <Parents/>
    <Definition body="1617" end="1704" fullname="ml.classify.compare.j" inherit_type="local" line="45" name="J" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1606" target="../../classify.ecl.xml">
     <Signature>J</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="1766" end="2081" fullname="ml.classify.compare.confmatrix_rec" inherit_type="local" line="47" name="ConfMatrix_Rec" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1742" target="../../classify.ecl.xml">
     <Type>record</Type>
     <Field name="classifier"/>
     <Field name="c_actual"/>
     <Field name="c_modeled"/>
     <Signature>ConfMatrix_Rec</Signature><Field name="Cnt"/>
    </Definition>
    <Definition body="2103" end="2194" fullname="ml.classify.compare.class_cnt" inherit_type="local" line="53" name="class_cnt" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2084" target="../../classify.ecl.xml">
     <Signature>class_cnt</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="2419" end="2507" fullname="ml.classify.compare.cfmx" inherit_type="local" line="59" name="cfmx" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2405" target="../../classify.ecl.xml">
     <Signature>cfmx</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="2579" end="2675" fullname="ml.classify.compare.cross_raw" inherit_type="local" line="60" name="cross_raw" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2560" target="../../classify.ecl.xml">
     <Signature>cross_raw</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="3017" end="3257" exported="1" fullname="ml.classify.compare.crossassignments" inherit_type="local" line="67" name="CrossAssignments" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2991" target="../../classify.ecl.xml">
     <Signature>CrossAssignments</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="3467" end="3638" exported="1" fullname="ml.classify.compare.recallbyclass" inherit_type="local" line="72" name="RecallByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3444" target="../../classify.ecl.xml">
     <Signature>RecallByClass</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="3794" end="3965" exported="1" fullname="ml.classify.compare.precisionbyclass" inherit_type="local" line="74" name="PrecisionByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3768" target="../../classify.ecl.xml">
     <Signature>PrecisionByClass</Signature><Type>attribute</Type>
    </Definition>
    <Definition body="4809" end="5017" exported="1" fullname="ml.classify.compare.fp_rate_byclass" inherit_type="local" line="85" name="FP_Rate_ByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="4784" target="../../classify.ecl.xml">
     <Signature>FP_Rate_ByClass</Signature><Type>attribute</Type>
    </Definition>
    <Signature>TestC(DATASET(Types.NumericField) indepData, DATASET(Types.DiscreteField) depData)</Signature><Definition body="5146" end="5265" exported="1" fullname="ml.classify.compare.accuracy" inherit_type="local" line="88" name="Accuracy" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="5128" target="../../classify.ecl.xml">
     <Signature>Accuracy</Signature><Type>attribute</Type>
    </Definition>
   </Definition>
   <Definition body="2017" end="2149" exported="1" fullname="ml.lazy.knn_kdtree.classifyc" inherit_type="override" line="30" name="ClassifyC" source="/media/sarthak/Data/ecl-ml/./ML/Lazy.ecl" start="1876" target="../../lazy.ecl.xml">
    <Type>function</Type>
    <Signature>ClassifyC(DATASET(Types.NumericField) indepData , DATASET(Types.DiscreteField) depData ,DATASET(Types.NumericField) queryPointsData)</Signature><Params>
     <Param name="indepData"/>
     <Param name="depData"/>
     <Param name="queryPointsData"/>
    </Params>
   </Definition>
   <Signature>iknn</Signature><Parents>
    <Parent line="13" name="KNN" ref="ml.lazy.knn" target="../../lazy.ecl.xml"/>
   </Parents>
  </Definition>
  <Definition body="592" end="625" fullname="ML.Classify.Compare" inherit_type="local" line="24" name="TestModule" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="580" target="../../classify.ecl.xml">
   <Type>module</Type>
   <Definition body="1617" end="1704" fullname="ml.classify.compare.j" inherit_type="local" line="45" name="J" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1606" target="../../classify.ecl.xml">
    <Signature>J</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="1766" end="2081" fullname="ml.classify.compare.confmatrix_rec" inherit_type="local" line="47" name="ConfMatrix_Rec" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1742" target="../../classify.ecl.xml">
    <Type>record</Type>
    <Field name="classifier"/>
    <Field name="c_actual"/>
    <Field name="c_modeled"/>
    <Signature>ConfMatrix_Rec</Signature><Field name="Cnt"/>
   </Definition>
   <Definition body="2103" end="2194" fullname="ml.classify.compare.class_cnt" inherit_type="local" line="53" name="class_cnt" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2084" target="../../classify.ecl.xml">
    <Signature>class_cnt</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="2419" end="2507" fullname="ml.classify.compare.cfmx" inherit_type="local" line="59" name="cfmx" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2405" target="../../classify.ecl.xml">
    <Signature>cfmx</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="2579" end="2675" fullname="ml.classify.compare.cross_raw" inherit_type="local" line="60" name="cross_raw" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2560" target="../../classify.ecl.xml">
    <Signature>cross_raw</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3017" end="3257" exported="1" fullname="ml.classify.compare.crossassignments" inherit_type="local" line="67" name="CrossAssignments" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2991" target="../../classify.ecl.xml">
    <Signature>CrossAssignments</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3467" end="3638" exported="1" fullname="ml.classify.compare.recallbyclass" inherit_type="local" line="72" name="RecallByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3444" target="../../classify.ecl.xml">
    <Signature>RecallByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3794" end="3965" exported="1" fullname="ml.classify.compare.precisionbyclass" inherit_type="local" line="74" name="PrecisionByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3768" target="../../classify.ecl.xml">
    <Signature>PrecisionByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="4809" end="5017" exported="1" fullname="ml.classify.compare.fp_rate_byclass" inherit_type="local" line="85" name="FP_Rate_ByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="4784" target="../../classify.ecl.xml">
    <Signature>FP_Rate_ByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="5146" end="5265" exported="1" fullname="ml.classify.compare.accuracy" inherit_type="local" line="88" name="Accuracy" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="5128" target="../../classify.ecl.xml">
    <Signature>Accuracy</Signature><Type>attribute</Type>
   </Definition>
   <Signature>TestModule</Signature><Parents/>
  </Definition>
  <Definition body="716" end="764" fullname="ml.tests.explanatory.computed" inherit_type="local" line="29" name="computed" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="706">
   <Signature>computed</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="777" end="818" fullname="ML.Classify.Compare" inherit_type="local" line="30" name="Comparison" source="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/KNN_KDTree.ecl" start="765" target="../../classify.ecl.xml">
   <Type>module</Type>
   <Definition body="1617" end="1704" fullname="ml.classify.compare.j" inherit_type="local" line="45" name="J" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1606" target="../../classify.ecl.xml">
    <Signature>J</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="1766" end="2081" fullname="ml.classify.compare.confmatrix_rec" inherit_type="local" line="47" name="ConfMatrix_Rec" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="1742" target="../../classify.ecl.xml">
    <Type>record</Type>
    <Field name="classifier"/>
    <Field name="c_actual"/>
    <Field name="c_modeled"/>
    <Signature>ConfMatrix_Rec</Signature><Field name="Cnt"/>
   </Definition>
   <Definition body="2103" end="2194" fullname="ml.classify.compare.class_cnt" inherit_type="local" line="53" name="class_cnt" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2084" target="../../classify.ecl.xml">
    <Signature>class_cnt</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="2419" end="2507" fullname="ml.classify.compare.cfmx" inherit_type="local" line="59" name="cfmx" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2405" target="../../classify.ecl.xml">
    <Signature>cfmx</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="2579" end="2675" fullname="ml.classify.compare.cross_raw" inherit_type="local" line="60" name="cross_raw" shared="1" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2560" target="../../classify.ecl.xml">
    <Signature>cross_raw</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3017" end="3257" exported="1" fullname="ml.classify.compare.crossassignments" inherit_type="local" line="67" name="CrossAssignments" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="2991" target="../../classify.ecl.xml">
    <Signature>CrossAssignments</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3467" end="3638" exported="1" fullname="ml.classify.compare.recallbyclass" inherit_type="local" line="72" name="RecallByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3444" target="../../classify.ecl.xml">
    <Signature>RecallByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="3794" end="3965" exported="1" fullname="ml.classify.compare.precisionbyclass" inherit_type="local" line="74" name="PrecisionByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="3768" target="../../classify.ecl.xml">
    <Signature>PrecisionByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="4809" end="5017" exported="1" fullname="ml.classify.compare.fp_rate_byclass" inherit_type="local" line="85" name="FP_Rate_ByClass" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="4784" target="../../classify.ecl.xml">
    <Signature>FP_Rate_ByClass</Signature><Type>attribute</Type>
   </Definition>
   <Definition body="5146" end="5265" exported="1" fullname="ml.classify.compare.accuracy" inherit_type="local" line="88" name="Accuracy" source="/media/sarthak/Data/ecl-ml/./ML/Classify.ecl" start="5128" target="../../classify.ecl.xml">
    <Signature>Accuracy</Signature><Type>attribute</Type>
   </Definition>
   <Signature>Comparison</Signature><Parents/>
  </Definition>
  <Definition body="37" end="105" fullname="ml.tests.explanatory.indepdata_toname" inherit_type="local" line="81" name="indepData_ToName" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//-----------------------------------</Signature><Params>
    <Param name="i"/>
   </Params>
  </Definition>
  <Definition body="37" end="105" fullname="ml.tests.explanatory.indeptest_toname" inherit_type="local" line="81" name="IndepTest_ToName" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//-----------------------------------</Signature><Params>
    <Param name="i"/>
   </Params>
  </Definition>
  <Definition body="34" end="55" fullname="ml.tests.explanatory.pr_dep_toname" inherit_type="local" line="81" name="pr_dep_ToName" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//--------------------------------</Signature><Params>
    <Param name="i"/>
   </Params>
  </Definition>
  <Definition body="35" end="56" fullname="ml.tests.explanatory.pr_dept_toname" inherit_type="local" line="81" name="pr_depT_ToName" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//---------------------------------</Signature><Params>
    <Param name="i"/>
   </Params>
  </Definition>
  <Definition body="39" end="106" fullname="ml.tests.explanatory.indepdata_tonumber" inherit_type="local" line="83" name="indepData_ToNumber" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//-------------------------------------</Signature><Params>
    <Param name="s"/>
   </Params>
  </Definition>
  <Definition body="39" end="106" fullname="ml.tests.explanatory.indeptest_tonumber" inherit_type="local" line="83" name="IndepTest_ToNumber" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//-------------------------------------</Signature><Params>
    <Param name="s"/>
   </Params>
  </Definition>
  <Definition body="36" end="56" fullname="ml.tests.explanatory.pr_dep_tonumber" inherit_type="local" line="83" name="pr_dep_ToNumber" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//----------------------------------</Signature><Params>
    <Param name="s"/>
   </Params>
  </Definition>
  <Definition body="37" end="57" fullname="ml.tests.explanatory.pr_dept_tonumber" inherit_type="local" line="83" name="pr_depT_ToNumber" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Type>function</Type>
   <Signature>//-----------------------------------</Signature><Params>
    <Param name="s"/>
   </Params>
  </Definition>
  <Definition body="2485" end="2654" fullname="ml.tests.explanatory.indepdata" inherit_type="local" line="85" name="indepData" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="1">
   <Signature>/---------------------------------------------------------------------------
// Macro takes a matrix dataset, with each row contianing an ID and one or
// more axis fields containing numeric values, and expands it into the 
// NumericField format used by ML.
//
//   dIn       : The name of the input dataset
//   dOut      : The name of the resulting dataset
//   idfield   : [OPTIONAL] The name of the field that contains the UID for
//               each row.  If omitted, it is assumed to be the first field.
//   datafields: [OPTIONAL] A STRING contianing a comma-delimited list of the
//               fields to be treated as axes.  If omitted, all numeric
//               fields that are not the UID will be treated as axes.
//               NOTE: idfield defaults to the first field in the table, so
//               if that field is specified as an axis field, then the user
//               should be sure to specify a value in the idfield param.
//
//  Along with creating the NumericField table, this macro produces two
//  simple functions to assist the user in mapping the field names to their
//  corresponding numbers.  These are "STRING dOut_ToName(UNSIGNED)" and
//  "UNSIGNED dOut_ToNumber(STRING)", where the "dOut" portion of the function
//  name is the name passed into that parameter of the macro.
//
//  The macro also produces a mapping table named "dOut_Map", again where
//  "dOut" refers to the parameter, that contains a table of the field
//  mappings
//  
//  Examples:
//    ML.ToField(dOrig,dMatrix)
//    ML.ToField(dOrig,dMatrix,myid,'field5,field7,field10')
//    dMatrix_ToName(2)  // returns 'field7'
//    dMatrix_ToNumber('field10') // returns 3
//    dMatrix_Map // returns the mapping table of field name to number
//---------------------------------------------------------------------------
 ToField(dIn,dOut,idfield='',datafields='')MACRO
  LOADXML('&lt;xml/&gt;')
  // Variable to contain the name of the field that maps to "id"
  #DECLARE(foundidfield) #SET(foundidfield,#TEXT(idfield))
  // Contains a comma-delimited list of the fields that will be used as axes,
  // beginning with "COUNTER" so it can be #EXPANDED into a CHOOSE call
  // during normalization
  #DECLARE(normlist) #SET(normlist,'COUNTER')
  // Count of the fields that become axes
  #DECLARE(iNumberOfFields) #SET(iNumberOfFields,0)
  // A list of every field in the original table and the field number (or "ID")
  // to which it is mapped in the output.  "</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2485" end="2654" fullname="ml.tests.explanatory.indeptest" inherit_type="local" line="85" name="IndepTest" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="1">
   <Signature>/---------------------------------------------------------------------------
// Macro takes a matrix dataset, with each row contianing an ID and one or
// more axis fields containing numeric values, and expands it into the 
// NumericField format used by ML.
//
//   dIn       : The name of the input dataset
//   dOut      : The name of the resulting dataset
//   idfield   : [OPTIONAL] The name of the field that contains the UID for
//               each row.  If omitted, it is assumed to be the first field.
//   datafields: [OPTIONAL] A STRING contianing a comma-delimited list of the
//               fields to be treated as axes.  If omitted, all numeric
//               fields that are not the UID will be treated as axes.
//               NOTE: idfield defaults to the first field in the table, so
//               if that field is specified as an axis field, then the user
//               should be sure to specify a value in the idfield param.
//
//  Along with creating the NumericField table, this macro produces two
//  simple functions to assist the user in mapping the field names to their
//  corresponding numbers.  These are "STRING dOut_ToName(UNSIGNED)" and
//  "UNSIGNED dOut_ToNumber(STRING)", where the "dOut" portion of the function
//  name is the name passed into that parameter of the macro.
//
//  The macro also produces a mapping table named "dOut_Map", again where
//  "dOut" refers to the parameter, that contains a table of the field
//  mappings
//  
//  Examples:
//    ML.ToField(dOrig,dMatrix)
//    ML.ToField(dOrig,dMatrix,myid,'field5,field7,field10')
//    dMatrix_ToName(2)  // returns 'field7'
//    dMatrix_ToNumber('field10') // returns 3
//    dMatrix_Map // returns the mapping table of field name to number
//---------------------------------------------------------------------------
 ToField(dIn,dOut,idfield='',datafields='')MACRO
  LOADXML('&lt;xml/&gt;')
  // Variable to contain the name of the field that maps to "id"
  #DECLARE(foundidfield) #SET(foundidfield,#TEXT(idfield))
  // Contains a comma-delimited list of the fields that will be used as axes,
  // beginning with "COUNTER" so it can be #EXPANDED into a CHOOSE call
  // during normalization
  #DECLARE(normlist) #SET(normlist,'COUNTER')
  // Count of the fields that become axes
  #DECLARE(iNumberOfFields) #SET(iNumberOfFields,0)
  // A list of every field in the original table and the field number (or "ID")
  // to which it is mapped in the output.  "</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2485" end="2654" fullname="ml.tests.explanatory.pr_dep" inherit_type="local" line="85" name="pr_dep" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="1">
   <Signature>/---------------------------------------------------------------------------
// Macro takes a matrix dataset, with each row contianing an ID and one or
// more axis fields containing numeric values, and expands it into the 
// NumericField format used by ML.
//
//   dIn       : The name of the input dataset
//   dOut      : The name of the resulting dataset
//   idfield   : [OPTIONAL] The name of the field that contains the UID for
//               each row.  If omitted, it is assumed to be the first field.
//   datafields: [OPTIONAL] A STRING contianing a comma-delimited list of the
//               fields to be treated as axes.  If omitted, all numeric
//               fields that are not the UID will be treated as axes.
//               NOTE: idfield defaults to the first field in the table, so
//               if that field is specified as an axis field, then the user
//               should be sure to specify a value in the idfield param.
//
//  Along with creating the NumericField table, this macro produces two
//  simple functions to assist the user in mapping the field names to their
//  corresponding numbers.  These are "STRING dOut_ToName(UNSIGNED)" and
//  "UNSIGNED dOut_ToNumber(STRING)", where the "dOut" portion of the function
//  name is the name passed into that parameter of the macro.
//
//  The macro also produces a mapping table named "dOut_Map", again where
//  "dOut" refers to the parameter, that contains a table of the field
//  mappings
//  
//  Examples:
//    ML.ToField(dOrig,dMatrix)
//    ML.ToField(dOrig,dMatrix,myid,'field5,field7,field10')
//    dMatrix_ToName(2)  // returns 'field7'
//    dMatrix_ToNumber('field10') // returns 3
//    dMatrix_Map // returns the mapping table of field name to number
//---------------------------------------------------------------------------
 ToField(dIn,dOut,idfield='',datafields='')MACRO
  LOADXML('&lt;xml/&gt;')
  // Variable to contain the name of the field that maps to "id"
  #DECLARE(foundidfield) #SET(foundidfield,#TEXT(idfield))
  // Contains a comma-delimited list of the fields that will be used as axes,
  // beginning with "COUNTER" so it can be #EXPANDED into a CHOOSE call
  // during normalization
  #DECLARE(normlist) #SET(normlist,'COUNTER')
  // Count of the fields that become axes
  #DECLARE(iNumberOfFields) #SET(iNumberOfFields,0)
  // A list of every field in the original table and the field number (or "ID")
  // to which it is mapped in the output.  "</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="2485" end="2654" fullname="ml.tests.explanatory.pr_dept" inherit_type="local" line="85" name="pr_depT" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="1">
   <Signature>/---------------------------------------------------------------------------
// Macro takes a matrix dataset, with each row contianing an ID and one or
// more axis fields containing numeric values, and expands it into the 
// NumericField format used by ML.
//
//   dIn       : The name of the input dataset
//   dOut      : The name of the resulting dataset
//   idfield   : [OPTIONAL] The name of the field that contains the UID for
//               each row.  If omitted, it is assumed to be the first field.
//   datafields: [OPTIONAL] A STRING contianing a comma-delimited list of the
//               fields to be treated as axes.  If omitted, all numeric
//               fields that are not the UID will be treated as axes.
//               NOTE: idfield defaults to the first field in the table, so
//               if that field is specified as an axis field, then the user
//               should be sure to specify a value in the idfield param.
//
//  Along with creating the NumericField table, this macro produces two
//  simple functions to assist the user in mapping the field names to their
//  corresponding numbers.  These are "STRING dOut_ToName(UNSIGNED)" and
//  "UNSIGNED dOut_ToNumber(STRING)", where the "dOut" portion of the function
//  name is the name passed into that parameter of the macro.
//
//  The macro also produces a mapping table named "dOut_Map", again where
//  "dOut" refers to the parameter, that contains a table of the field
//  mappings
//  
//  Examples:
//    ML.ToField(dOrig,dMatrix)
//    ML.ToField(dOrig,dMatrix,myid,'field5,field7,field10')
//    dMatrix_ToName(2)  // returns 'field7'
//    dMatrix_ToNumber('field10') // returns 3
//    dMatrix_Map // returns the mapping table of field name to number
//---------------------------------------------------------------------------
 ToField(dIn,dOut,idfield='',datafields='')MACRO
  LOADXML('&lt;xml/&gt;')
  // Variable to contain the name of the field that maps to "id"
  #DECLARE(foundidfield) #SET(foundidfield,#TEXT(idfield))
  // Contains a comma-delimited list of the fields that will be used as axes,
  // beginning with "COUNTER" so it can be #EXPANDED into a CHOOSE call
  // during normalization
  #DECLARE(normlist) #SET(normlist,'COUNTER')
  // Count of the fields that become axes
  #DECLARE(iNumberOfFields) #SET(iNumberOfFields,0)
  // A list of every field in the original table and the field number (or "ID")
  // to which it is mapped in the output.  "</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="15" end="2800" fullname="ml.tests.explanatory.indepdata_map" inherit_type="local" line="87" name="indepData_Map" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Signature>//-------------</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="15" end="2800" fullname="ml.tests.explanatory.indeptest_map" inherit_type="local" line="87" name="IndepTest_Map" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Signature>//-------------</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="12" end="2800" fullname="ml.tests.explanatory.pr_dep_map" inherit_type="local" line="87" name="pr_dep_Map" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Signature>//----------</Signature><Type>attribute</Type>
  </Definition>
  <Definition body="13" end="2800" fullname="ml.tests.explanatory.pr_dept_map" inherit_type="local" line="87" name="pr_depT_Map" source="/media/sarthak/Data/ecl-ml/./ML/ToField.ecl" start="0">
   <Signature>//-----------</Signature><Type>attribute</Type>
  </Definition>
 </Source>
 <Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Tests/Explanatory/MonkDS.ecl" name="ML.Tests.Explanatory.MonkDS" target="monkds.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Types.ecl" name="ML.Types" target="../../types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Types.ecl" name="ML.Mat.Types" target="../../mat/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/ToField.ecl" name="ML.ToField" target="../../tofield.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Discretize.ecl" name="ML.Discretize" target="../../discretize.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Config.ecl" name="ML.Config" target="../../config.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/FieldAggregates.ecl" name="ML.FieldAggregates" target="../../fieldaggregates.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Utils.ecl" name="ML.Utils" target="../../utils.ecl.xml"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl" name="std.Str" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/Str.ecl"/><Depends sourcePath="lib_stringlib" target="lib_stringlib"/><Depends sourcePath="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl" name="std.system.Thorlib" target="/home/sarthak/runtime/opt/HPCCSystems/6.5.0/clienttools/share/ecllibrary/std/system/Thorlib.ecl"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Repmat.ecl" name="ML.Mat.Repmat" target="../../mat/repmat.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Has.ecl" name="ML.Mat.Has" target="../../mat/has.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Each.ecl" name="ML.Mat.Each" target="../../mat/each.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Lazy.ecl" name="ML.Lazy" target="../../lazy.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/NearestNeighborsSearch.ecl" name="ML.NearestNeighborsSearch" target="../../nearestneighborssearch.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Trees.ecl" name="ML.Trees" target="../../trees.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/FromField.ecl" name="ML.FromField" target="../../fromfield.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Sampling.ecl" name="ML.Sampling" target="../../sampling.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Vec.ecl" name="ML.Mat.Vec" target="../../mat/vec.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/AppendID.ecl" name="ML.AppendID" target="../../appendid.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Classify.ecl" name="ML.Classify" target="../../classify.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Types.ecl" name="PBblas.Types" target="../../../pbblas/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/NaiveBayes.ecl" name="ML.NaiveBayes" target="../../naivebayes.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/NeuralNetworks.ecl" name="ML.NeuralNetworks" target="../../neuralnetworks.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/MU.ecl" name="ML.Mat.MU" target="../../mat/mu.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Trans.ecl" name="ML.Mat.Trans" target="../../mat/trans.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/AutoBVMap.ecl" name="PBblas.AutoBVMap" target="../../../pbblas/autobvmap.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/IMatrix_Map.ecl" name="PBblas.IMatrix_Map" target="../../../pbblas/imatrix_map.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Matrix_Map.ecl" name="PBblas.Matrix_Map" target="../../../pbblas/matrix_map.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/DMat/Converted.ecl" name="ML.DMat.Converted" target="../../dmat/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/MakeR8Set.ecl" name="PBblas.MakeR8Set" target="../../../pbblas/maker8set.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/MU.ecl" name="PBblas.MU" target="../../../pbblas/mu.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dgemm.ecl" name="PBblas.PB_dgemm" target="../../../pbblas/pb_dgemm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Constants.ecl" name="PBblas.Constants" target="../../../pbblas/constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/BLAS/dgemm.ecl" name="PBblas.BLAS.dgemm" target="../../../pbblas/blas/dgemm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/BLAS/dscal.ecl" name="PBblas.BLAS.dscal" target="../../../pbblas/blas/dscal.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/BLAS/daxpy.ecl" name="PBblas.BLAS.daxpy" target="../../../pbblas/blas/daxpy.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Apply2Elements.ecl" name="PBblas.Apply2Elements" target="../../../pbblas/apply2elements.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/IElementFunc.ecl" name="PBblas.IElementFunc" target="../../../pbblas/ielementfunc.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_daxpy.ecl" name="PBblas.PB_daxpy" target="../../../pbblas/pb_daxpy.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/HadamardProduct.ecl" name="PBblas.HadamardProduct" target="../../../pbblas/hadamardproduct.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dscal.ecl" name="PBblas.PB_dscal" target="../../../pbblas/pb_dscal.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Distribution.ecl" name="ML.Distribution" target="../../distribution.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/InsertColumn.ecl" name="ML.Mat.InsertColumn" target="../../mat/insertcolumn.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Identity.ecl" name="ML.Mat.Identity" target="../../mat/identity.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Mul.ecl" name="ML.Mat.Mul" target="../../mat/mul.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Strict.ecl" name="ML.Mat.Strict" target="../../mat/strict.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Debug.ecl" name="ML.Mat.Debug" target="../../mat/debug.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Scale.ecl" name="ML.Mat.Scale" target="../../mat/scale.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Add.ecl" name="ML.Mat.Add" target="../../mat/add.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Sub.ecl" name="ML.Mat.Sub" target="../../mat/sub.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Inv.ecl" name="ML.Mat.Inv" target="../../mat/inv.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Decomp.ecl" name="ML.Mat.Decomp" target="../../mat/decomp.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/SetDimension.ecl" name="ML.Mat.SetDimension" target="../../mat/setdimension.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Substitute.ecl" name="ML.Mat.Substitute" target="../../mat/substitute.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/LowerTriangle.ecl" name="ML.Mat.LowerTriangle" target="../../mat/lowertriangle.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/UpperTriangle.ecl" name="ML.Mat.UpperTriangle" target="../../mat/uppertriangle.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Householder.ecl" name="ML.Mat.Householder" target="../../mat/householder.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Mat/Det.ecl" name="ML.Mat.Det" target="../../mat/det.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Vector2Diag.ecl" name="PBblas.Vector2Diag" target="../../../pbblas/vector2diag.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Block/make_diag.ecl" name="PBblas.Block.make_diag" target="../../../pbblas/block/make_diag.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dgetrf.ecl" name="PBblas.PB_dgetrf" target="../../../pbblas/pb_dgetrf.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/Block/dgetf2.ecl" name="PBblas.Block.dgetf2" target="../../../pbblas/block/dgetf2.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/BLAS/dtrsm.ecl" name="PBblas.BLAS.dtrsm" target="../../../pbblas/blas/dtrsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dtrsm.ecl" name="PBblas.PB_dtrsm" target="../../../pbblas/pb_dtrsm.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dtran.ecl" name="PBblas.PB_dtran" target="../../../pbblas/pb_dtran.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/DMat/Trans.ecl" name="ML.DMat.Trans" target="../../dmat/trans.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/DMat/Inv.ecl" name="ML.DMat.Inv" target="../../dmat/inv.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/PB_dpotrf.ecl" name="PBblas.PB_dpotrf" target="../../../pbblas/pb_dpotrf.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/PBblas/LAPACK/dpotf2.ecl" name="PBblas.LAPACK.dpotf2" target="../../../pbblas/lapack/dpotf2.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/Ensemble.ecl" name="ML.Ensemble" target="../../ensemble.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/Types.ecl" name="ML.SVM.Types" target="../../svm/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/LibSVM/Types.ecl" name="ML.SVM.LibSVM.Types" target="../../svm/libsvm/types.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/Converted.ecl" name="ML.SVM.Converted" target="../../svm/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/train.ecl" name="ML.SVM.train" target="../../svm/train.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/LibSVM/Converted.ecl" name="ML.SVM.LibSVM.Converted" target="../../svm/libsvm/converted.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/LibSVM/svm_train.ecl" name="ML.SVM.LibSVM.svm_train" target="../../svm/libsvm/svm_train.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/LibSVM/Constants.ecl" name="ML.SVM.LibSVM.Constants" target="../../svm/libsvm/constants.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/LibSVM/svm_predict.ecl" name="ML.SVM.LibSVM.SVM_Predict" target="../../svm/libsvm/svm_predict.ecl.xml"/><Depends sourcePath="/media/sarthak/Data/ecl-ml/ML/SVM/predict.ecl" name="ML.SVM.predict" target="../../svm/predict.ecl.xml"/></Meta>